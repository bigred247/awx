  - debug:
      msg: "Starting linux-patch-script-1"

  - name: create a logs directory for ansible
    shell: rm -rf /var/log/ansible-templates && mkdir /var/log/ansible-templates
    become: yes
    become_method: su
    become_exe: "sudo su -"

  - name: 01 - Yum clean metadata
    command: yum clean metadata
    args:
      warn: no

  - name: 02 - Old CF output file for same of handover
    shell: rpm -qa --queryformat "%{NAME};%{VERSION}-%{RELEASE}\n" | sort -t\; -k 1 > /var/log/ansible-templates/yum-Installed-pre.txt

  - name: 03 - Set variable to number of installed packages and available updates
    shell: "{{ item }}"
    with_items: 
      - export pre_pkg_inst=$(yum list installed | grep '^[a-Z0-9]' | wc -l)
      - export pre_pkg_avail=$(yum check-update --quiet | grep '^[a-Z0-9]' | wc -l)
      - echo -n "${HOSTNAME};${pre_pkg_inst};${pre_pkg_avail};" > /var/log/ansible-templates/$HOSTNAME-yum-install.txt

  # - name: 04 - Run yum update and output details
  #   yum:
  #     name: '*'
  #     state: latest
  #   register: yumoutput
    
  # - name: 05 - Show registered var contents and structure
  #   debug:
  #     var: yumoutput

  # - name: 06 - Copy the output to a local file
  #   copy:
  #     content: "{{ yumoutput | to_nice_yaml(indent=2) }}"
  #     dest: "/var/log/ansible-templates/yum-update.txt"

  # - name: 07 - Reboot machine after update
  #   reboot:
  #     msg: Reboot initiated by Ansible after patching
  #     post_reboot_delay: 30
  #     reboot_timeout: 600
  #   when: yumoutput.changed

  - name: Run yum update and output details
    shell: yum -y update > /var/log/ansible-templates/yum-update.txt
    register: yumresult
    become: yes
    become_method: su
    become_exe: "sudo su -"

  - name: 07 - Reboot machine after update
    reboot:
      msg: Reboot initiated by Ansible after patching
      post_reboot_delay: 30
      reboot_timeout: 600
    when: yumresult.changed

    ##;